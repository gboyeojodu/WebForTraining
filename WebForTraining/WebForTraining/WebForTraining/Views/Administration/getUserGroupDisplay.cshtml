@using WebForTraining.Models;
@using WebForTraining.Database;
@{
    //var employeeID = Request.Params["employeeID"];
    //var token = Session["Token"].ToString();
    Layout = null;
    //List<string> AuthForms = (List<string>)Session["Forms"];
    var UserGroup = Administration.getUsersGroup();


}
@if (UserGroup != null)
{
    <div class="table-responsive">
        <table class="table table-striped responsive-utilities jambo_table dataTable" id="tblUsersGroup">
            <thead>
                <tr>
                    <th><input type="checkbox" class="selUserGroup" onclick="checkAll(this, 'selUserGroup');" /></th>
                    <th><strong>Group Name</strong></th>
                    <th><strong>Description</strong></th>
                    <th><strong></strong></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var grp in UserGroup)
                {
                    <tr>
                        <td><input type="checkbox" value="@grp.userGroupID" class="tableflat selUserGroup" /></td>
                        <td><span class="underline">@grp.groupName</span></td>
                        <td>@grp.description</td>
                        <td>
                            <a data-id="@grp.userGroupID" onclick="javascript: ld_modal_fm('/Administration/AddEditUserGroup', 'modalContentLoad', '@grp.userGroupID');" class="btn btn-metro btn-info btn-xs">
                                <i class="fa fa-pencil"></i>
                            </a>
                            <a data-id="@grp.userGroupID" onclick="javascript: delRecord('@grp.userGroupID','/Administration/deleteUsersGroup');" class="btn btn-metro btn-default btn-xs">
                                <i class="glyphicon glyphicon-trash"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="alert alert-warning">No record to display</div>
}

<script>
    styleTable('tblUsersGroup');
</script>
@*<script>
    $(document).ready(function () {
        $('input.tableflat').iCheck({
            checkboxClass: 'icheckbox_flat-green',
            radioClass: 'iradio_flat-green'
        });
    });

    var asInitVals = new Array();
    $(document).ready(function () {
        var oTable = $('#tblUsersGroup').dataTable({
            "oLanguage": {
                "sSearch": "Search all columns:"
            },
            "aoColumnDefs": [
                {
                    'bSortable': false,
                    'aTargets': [0]
                } //disables sorting for column one
            ],
            //,
            //'iDisplayLength': 12,
            "sPaginationType": "full_numbers"
            //"dom": 'T<"clear">lfrtip'
            //,
            //"tableTools": {
            //    "sSwfPath": "../js/datatables/tools/swf/copy_csv_xls_pdf.swf"
            //}
        });
        $("tfoot input").keyup(function () {
            /* Filter on the column based on the index of this element's parent <th> */
            oTable.fnFilter(this.value, $("tfoot th").index($(this).parent()));
        });
        $("tfoot input").each(function (i) {
            asInitVals[i] = this.value;
        });
        $("tfoot input").focus(function () {
            if (this.className == "search_init") {
                this.className = "";
                this.value = "";
            }
        });
        $("tfoot input").blur(function (i) {
            if (this.value == "") {
                this.className = "search_init";
                this.value = asInitVals[$("tfoot input").index(this)];
            }
        });
    });
</script>*@







